{"version":3,"sources":["App.tsx","components/GoodInfo/GoodInfo.tsx","components/GoodList/GoodList.tsx","index.tsx"],"names":["SortType","GoodInfo","good","GoodList","goods","map","goodsFromServer","App","state","isReversed","sortType","NONE","sortAlphabetically","setState","ALPHABET","sortByLength","LENGTH","reverse","reset","this","isOriginalOrder","sortedGoods","visibleGoods","sort","firstGood","secondGood","localeCompare","length","getReorderedGoods","className","type","classNames","onClick","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAoBKA,E,iFCbQC,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC1C,OACE,mCACGA,KCFMC,EAA4B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1C,OACE,6BACGA,EAAMC,KAAI,SAAAH,GAAI,OACb,oBAAe,UAAQ,OAAvB,SACE,cAAC,EAAD,CAAUA,KAAMA,KADTA,SFLJI,G,YAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,Y,SAGGN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAwCE,IAAMO,EAAb,4MACEC,MAAyB,CACvBC,YAAY,EACZC,SAAUV,EAASW,MAHvB,EAMEC,mBAAqB,WACnB,EAAKC,SAAS,CACZH,SAAUV,EAASc,YARzB,EAYEC,aAAe,WACb,EAAKF,SAAS,CACZH,SAAUV,EAASgB,UAdzB,EAkBEC,QAAU,WACR,EAAKJ,UAAS,SAAAL,GAAK,MACjB,CAAEC,YAAaD,EAAMC,gBApB3B,EAwBES,MAAQ,WACN,EAAKL,SAAS,CACZJ,YAAY,EACZC,SAAUV,EAASW,QA3BzB,4CA+BE,WACE,MAAiCQ,KAAKX,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdU,GAAmBX,GAAcC,IAAaV,EAASW,KACvDU,EA/DH,SACLjB,EADK,GAGJ,IADCM,EACF,EADEA,SAAUD,EACZ,EADYA,WAENa,EAAY,YAAOlB,GAezB,OAbAkB,EAAaC,MAAK,SAACC,EAAWC,GAC5B,OAAQf,GACN,KAAKV,EAASc,SACZ,OAAOU,EAAUE,cAAcD,GAEjC,KAAKzB,EAASgB,OACZ,OAAOQ,EAAUG,OAASF,EAAWE,OAEvC,QACE,OAAO,MAINlB,EACHa,EAAaL,UACbK,EA0CkBM,CAAkBtB,EAAiBa,KAAKX,OAE5D,OACE,sBAAKqB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYrB,IAAaV,EAASc,WAEtCkB,QAASb,KAAKP,mBAPhB,iCAYA,wBACEkB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYrB,IAAaV,EAASgB,SAEtCgB,QAASb,KAAKJ,aAPhB,4BAYA,wBACEe,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAatB,IAEjBuB,QAASb,KAAKF,QAPhB,sBAYEG,GACA,wBACEU,KAAK,SACLD,UAAU,4BACVG,QAASb,KAAKD,MAHhB,sBAUJ,cAAC,EAAD,CAAUd,MAAOiB,WAtFzB,GAAyBY,aGzDzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9a7889e3.chunk.js","sourcesContent":["import { Component } from 'react';\nimport classNames from 'classnames';\nimport { GoodList } from './components/GoodList/GoodList';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((firstGood, secondGood) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return firstGood.localeCompare(secondGood);\n\n      case SortType.LENGTH:\n        return firstGood.length - secondGood.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  return isReversed\n    ? visibleGoods.reverse()\n    : visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortAlphabetically = () => {\n    this.setState({\n      sortType: SortType.ALPHABET,\n    });\n  };\n\n  sortByLength = () => {\n    this.setState({\n      sortType: SortType.LENGTH,\n    });\n  };\n\n  reverse = () => {\n    this.setState(state => (\n      { isReversed: !state.isReversed }\n    ));\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render(): React.ReactNode {\n    const { isReversed, sortType } = this.state;\n    const isOriginalOrder = !isReversed && sortType === SortType.NONE;\n    const sortedGoods = getReorderedGoods(goodsFromServer, this.state);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-info',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )}\n            onClick={this.sortAlphabetically}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-warning',\n              { 'is-light': !isReversed },\n            )}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {!isOriginalOrder && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <GoodList goods={sortedGoods} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Good } from '../../types/Good';\n\ntype Props = {\n  good: Good;\n};\n\nexport const GoodInfo: React.FC<Props> = ({ good }) => {\n  return (\n    <>\n      {good}\n    </>\n  );\n};\n","import React from 'react';\nimport { Good } from '../../types/Good';\nimport { GoodInfo } from '../GoodInfo/GoodInfo';\n\ntype Props = {\n  goods: Good[];\n};\n\nexport const GoodList: React.FC<Props> = ({ goods }) => {\n  return (\n    <ul>\n      {goods.map(good => (\n        <li key={good} data-cy=\"Good\">\n          <GoodInfo good={good} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}